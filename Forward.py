def Forvard (V,alpha,betta,DeltaElev,w):
  #Начальные данные:
    Sw=16.2
    ro=1.225
    w_1=100
    w_2=200
    import numpy as np
    from scipy.interpolate import interp1d
    alpha_1=np.array([-7.5,-5,-2.5,0,2.5,5,7.5,10,15,17,18,19.5])*(np.pi/180)
    betta_1=np.array([0,1,2,3,4,5,6,7,8,9,10,11])*(np.pi/180)
    deltaElev=np.array([-26, -20, -10, -5, 0, 7.5, 15, 22.5, 28])*(np.pi/180)
    #Входные данные для Cx
    CD=np.array([0.044,0.034,0.03,0.03,0.036,0.048,0.067,0.093,0.15,0.169,0.177,0.184])
    CDDeltaElev=np.array([[0.0135, 0.0119, 0.0102, 0.00846, 0.0067, 0.0049, 0.00309, 0.00117, -0.0033, -0.00541, -0.00656, -0.00838],
      [0.0121, 0.0106, 0.00902, 0.00738, 0.00574, 0.00406, 0.00238, 0.00059, -0.00358, -0.00555, -0.00661, -0.00831],
      [0.00651, 0.00552, 0.00447, 0.00338, 0.00229, 0.00117, 0.0000517, -0.00114, -0.00391, -0.00522, -0.00593, -0.00706],
      [0.00249, 0.002, 0.00147, 0.000931, 0.000384, -0.000174, -0.000735, -0.00133, -0.00272, -0.00337, -0.00373, -0.00429],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [-0.00089, -0.00015, 0.00064, 0.00146, 0.00228, 0.00311, 0.00395, 0.00485, 0.00693, 0.00791, 0.00844, 0.00929],
      [0.00121, 0.00261, 0.00411, 0.00566, 0.00721, 0.00879, 0.0104, 0.0121, 0.016, 0.0179, 0.0189, 0.0205],
      [0.00174, 0.00323, 0.00483, 0.00648, 0.00814, 0.00983, 0.0115, 0.0133, 0.0175, 0.0195, 0.0206, 0.0223],
      [0.00273, 0.00438, 0.00614, 0.00796, 0.0098, 0.0117, 0.0135, 0.0155, 0.0202, 0.0224, 0.0236, 0.0255]])
    #Входные данные для Cy
    CL=np.array([-0.571,-0.321,-0.083,0.148,0.392,0.65,0.918,1.195,1.659,1.789,1.84,1.889])
    CLAlphadot=np.array([2.434, 2.362, 2.253, 2.209, 2.178, 2.149, 2.069, 1.855, 1.185, 0.8333, 0.6394, 0.4971])
    CLQ=np.array([7.282, 7.282, 7.282, 7.282, 7.282, 7.282, 7.282, 7.282, 7.282, 7.282, 7.282, 7.282])
    CLDdeltaElev=np.array([-0.132, -0.123, -0.082, -0.041, 0, 0.061, 0.116, 0.124, 0.137])
    #Входные данные для Cz
    CYBeta=np.array([-0.268, -0.268, -0.268, -0.268, -0.268, -0.268, -0.268, -0.268, -0.268, -0.268, -0.268, -0.268])
    CYp=np.array([-0.032, -0.0372, -0.0418, -0.0463, -0.051, -0.0563, -0.0617, -0.068, -0.0783, -0.0812, -0.0824, -0.083])
    CYr=np.array([0.2018, 0.2054, 0.2087, 0.2115, 0.2139, 0.2159, 0.2175, 0.2187, 0.2198, 0.2198, 0.2196, 0.2194])
    CYDeltaRud=np.array([-0.561, -0.561, -0.561, -0.561, -0.561, -0.561, -0.561, -0.561, -0.561, -0.561, -0.561, -0.561])
    #Вычисление Cx
    c=[]
    for i in range(12):
        CDDD=np.array(np.interp(DeltaElev,deltaElev,CDDeltaElev[:,i]))
        c.append(CDDD)
    c=np.asarray(c)      
    CDD=np.interp(alpha,alpha_1,c)
    cx_1=np.interp(alpha,alpha_1,CD)
    cx=CDD+cx_1
   # #Вычисление Cy
    cy_1=np.interp(alpha,alpha_1,CL)
    cy_2=np.interp(alpha,alpha_1,CLAlphadot)
    cy_3=np.interp(alpha,alpha_1,CLQ)
    cy_4=np.interp(DeltaElev,deltaElev,CLDdeltaElev)
    cy=cy_1+(cy_2*alpha)+(cy_3*w)+cy_4*DeltaElev
    #Вычисление Cz
    cz_1=np.interp(betta,betta_1,CYBeta) 
    cz_2=np.interp(alpha,alpha_1,CYp) 
    cz_3=np.interp(alpha,alpha_1,CYr)
    cz_4=np.interp(alpha,alpha_1,CYDeltaRud)
    cz=(cz_1*betta)+(cz_2*w_1)+(cz_3*w_2)+(cz_4*alpha)
    #Вычисление аэродинамических сил
    Fx=cx*ro*(V**2)*Sw/2
    Fy=cy*ro*(V**2)*Sw/2
    Fz=cz*(V**2)*Sw/2
    F=np.array([Fx,Fy,Fz])
    return F

Forvard(400,0.04,0.01,0.01,500)
